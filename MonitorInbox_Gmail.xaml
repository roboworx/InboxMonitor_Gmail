<Activity mc:Ignorable="sap sap2010" x:Class="MonitorInbox" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_MessageList" Type="OutArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="StoreValue" Type="OutArgument(scg:List(snm:MailMessage))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>402,1917</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MonitorInbox_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Windows.Documents</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>PresentationUI</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get Gmail messages, mark them read, move them into folder.&#xA;&#xA;Pre Condition: &#xA;--IMAP must be enabled in the Gmail account settings&#xA;--2 Factor Authentication must be enabled for the Gmail Account&#xA;--App password must be created for UiPath in the Gmail Account AFTER 2 Factor Authentication has been enabled for the account." DisplayName="GetGmailMessages" sap:VirtualizedContainerService.HintSize="382,1857" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optional - If more than one account Inbox is added to the Outlook application.&#xA;&#xA;NOTE: Do not use unless there are multiple accounts." Default="coolermaintenance@gmail.com" Name="EmailAddress" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The filter string used to find the messages we want to read and process." Default="Alert:FridgeTemp" Name="strSearchCriteria" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Folder messages are moved into at end of process." Default="Refrigeration Monitoring" Name="strMailMoveFolder" />
      <Variable x:TypeArguments="x:Int32" Default="993" Name="IMAPPortNumber" />
      <Variable x:TypeArguments="x:String" Default="imap.gmail.com" Name="IMAPServer" />
      <Variable x:TypeArguments="x:String" Default="hroeoncgfkcmcsyb" Name="EmailPassword" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="in_MessagesToProcess" />
      <Variable x:TypeArguments="x:Int32" Name="NumberOfMessages" />
      <Variable x:TypeArguments="x:String" Default="---------------" Name="LogBreaker" />
      <Variable x:TypeArguments="x:String" Name="out_messagebody" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="out_ProcessedMessages" />
      <Variable x:TypeArguments="x:Int32" Name="NumberOfIgnoredMessages" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="out_ignored_messages" />
      <Variable x:TypeArguments="x:Int32" Name="TotalNumberOfMessages" />
      <Variable x:TypeArguments="x:Int32" Name="NumberOfProcessedMessages" />
      <Variable x:TypeArguments="x:String" Name="messagesubject" />
      <Variable x:TypeArguments="x:String" Name="messagebody" />
      <Variable x:TypeArguments="x:String" Name="str_messagesubject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetIMAPMailMessages TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Login to Gmail account and get messages that meet the filter criteria." DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="[EmailAddress]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="340,79" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_1" MailFolder="Inbox" MarkAsRead="False" Messages="[in_MessagesToProcess]" OnlyUnreadMessages="True" Password="[EmailPassword]" Port="[IMAPPortNumber]" SecureConnection="SslOnConnect" Server="[IMAPServer]" Top="30">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetIMAPMailMessages>
    <Assign sap2010:Annotation.AnnotationText="Define variable = Count the number of messages as string." sap:VirtualizedContainerService.HintSize="340,102" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[NumberOfMessages]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[in_MessagesToProcess.Count]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Log number of messages found for workflow and performance audit." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="340,133" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[LogBreaker + Environment.NewLine +&#xA;NumberOfMessages.ToString + &quot; Messages Found&quot; +  Environment.NewLine]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop through list of messages that meet the criteria.  Processed messages are marked as read and moved to specified folder." DisplayName="For Each" sap:VirtualizedContainerService.HintSize="340,548" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_MessagesToProcess]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="item" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="Assign variables which convert message elements to strings." DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,357" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[messagesubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[Item.Subject.ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <If sap2010:Annotation.AnnotationText="Move messages if they match the condition, else add the message to a list of ignored messages." Condition="[messagesubject = strSearchCriteria]" sap:VirtualizedContainerService.HintSize="653,808" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="304,633" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[messagebody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Item.Headers("HTMLBody").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[messagebody]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Convert.ToString(system.Text.RegularExpressions.Regex.Replace(Item.Headers("HTMLBody"), “&lt;[^&gt;]+&gt;|&amp;nbsp|[\r\t\n]”, String.Empty))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[messagesubject]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[item.Subject.ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:MoveIMAPMailMessageToFolder sap2010:Annotation.AnnotationText="Move Message to specified folder." DisplayName="Move IMAP Mail Message" Email="[EmailAddress]" EnableSSL="True" FromFolder="Inbox" sap:VirtualizedContainerService.HintSize="262,93" sap2010:WorkflowViewState.IdRef="MoveIMAPMailMessageToFolder_1" MailFolder="[strMailMoveFolder]" MailMessage="[item]" Password="[EmailPassword]" Port="[IMAPPortNumber]" SecureConnection="Auto" Server="[IMAPServer]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MoveIMAPMailMessageToFolder>
                  <ui:LogMessage sap2010:Annotation.AnnotationText="Enter message details into log for further processing as needed." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[LogBreaker + &quot; message processed &quot; + LogBreaker + Environment.NewLine +&#xD;&#xA;&quot;message start  --&gt;&quot; + Environment.NewLine +&#xD;&#xA;&quot;SUBJECT:  &quot; + messagesubject + Environment.NewLine + &#xD;&#xA;&quot;SENDER:  &quot; + item.from.ToString + Environment.NewLine +&#xD;&#xA;&quot;BODY:  &quot; + messagebody + Environment.NewLine +&#xD;&#xA;&quot;&lt;-- message end&quot; + Environment.NewLine]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[TotalNumberOfMessages]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[in_MessagesToProcess.Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:GetIMAPMailMessages TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Moved messages are marked as read." DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="[EmailAddress]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="340,64" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_2" MailFolder="[strMailMoveFolder]" MarkAsRead="True" Messages="[out_ProcessedMessages]" OnlyUnreadMessages="True" Password="[EmailPassword]" Port="[IMAPPortNumber]" SecureConnection="SslOnConnect" Server="[IMAPServer]" Top="30">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetIMAPMailMessages>
    <Assign sap:VirtualizedContainerService.HintSize="340,60" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_MessageList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_ProcessedMessages]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Define variable = Count the number of processed messages." sap:VirtualizedContainerService.HintSize="340,102" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[NumberOfProcessedMessages]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[out_ProcessedMessages.Count]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="Define variable = Calculate the number of ignored messages. (Total - Processed)" sap:VirtualizedContainerService.HintSize="340,102" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[NumberOfIgnoredMessages]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[(TotalNumberOfMessages - NumberOfProcessedMessages)]</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Log the number of processed messages and ignored messages." DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="340,108" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[LogBreaker + Environment.NewLine+&#xA;&quot;***** Processing Completed Successfully *****&quot;+Environment.NewLine+&#xA;&quot;***** Process Results *****&quot; + Environment.NewLine+&#xA;out_ProcessedMessages.Count.ToString + &quot;  Alert Messages Processed&quot; +Environment.NewLine+&#xA;NumberOfIgnoredMessages.ToString + &quot;  Ignored Messages&quot; + Environment.NewLine+ &#xA;TotalNumberOfMessages.ToString + &quot;  Total&quot; + Environment.NewLine+ &#xA;&quot;***** Results End *****&quot; + Environment.NewLine+&#xA;LogBreaker]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>